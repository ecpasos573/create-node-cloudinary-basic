require("dotenv").load();

var fs = require("fs");

const util = require("util");
const path = require("path");
const logger = require("../appmain/app_utility");
const underliner =
  "                                                                                           \n"
    .underline;
const resultdata = "  %s: %s";

cloudinary = require("cloudinary").v2;

// set your env variable CLOUDINARY_URL or set the following configuration
cloudinary.config({
  cloud_name: process.env.CLOUD_NAME,
  api_key: process.env.API_KEY,
  api_secret: process.env.API_SECRET,
  secure: true,
});

var uploads = {};
var processCount = 1;

(function () {

    videoFileUploadBasicFunc = function(){

        var targetvideo = `${process.cwd()}/assets/videos/hero_animation_2022.mp4`;
    
        // File upload
        cloudinary.uploader.upload(targetvideo, {
            resource_type: 'video',
            tags: 'basic_video_sample' 
        }, function (err, video) {
          console.log();
          console.log("** Video File Upload");
          if (err) { console.warn(err); }
          console.log("* public_id for the uploaded video is generated by Cloudinary's service.");
          console.log("* " + video.public_id);
          console.log("* " + video.url);
          waitForAllVideoUploads("video000", err, video);
        });
      }

    waitForAllVideoUploads = function (id, err, video) {
    uploads[id] = video;
    var ids = Object.keys(uploads);

    logger.info(
        util.format("processCount: %d, id_len: %d", processCount, ids.length)
    );

    if (ids.length === processCount) {
        console.log();
        console.log(
        "**  uploaded all files (" + ids.join(",") + ") to cloudinary"
        );
        performVideoTransformations();
    }
    };

    performVideoTransformations = function () {
        logger.info("Processing all files completed!".green);
    };

})();